generator client {
  provider      = "prisma-client-js"
  output        = "../generated/mongo"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource mongodb {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

model EventOrganizerUser {
  id        String   @id @default(auto()) @map("_id") @mongodb.ObjectId // MongoDB uses auto-generated ObjectId
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())

  tasks            EventOrganizerTask[]
  guests           EventOrganizerGuest[]
  venues           EventOrganizerVenue[]
  serviceProviders EventOrganizerServiceProvider[]
}

model EventOrganizerTask {
  id          String   @id @default(auto()) @map("_id") @mongodb.ObjectId
  title       String
  description String
  dueDate     DateTime
  status      String
  userId      String   @mongodb.ObjectId
  createdAt   DateTime @default(now())

  user EventOrganizerUser @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model EventOrganizerGuest {
  id        String   @id @default(auto()) @map("_id") @mongodb.ObjectId
  eventId   String
  name      String
  email     String
  phone     String
  status    String
  userId    String   @mongodb.ObjectId
  createdAt DateTime @default(now())

  user EventOrganizerUser @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model EventOrganizerVenue {
  id          String   @id @default(auto()) @map("_id") @mongodb.ObjectId
  name        String
  location    String
  capacity    Int
  amenities   String
  submittedBy String   @mongodb.ObjectId
  createdAt   DateTime @default(now())

  user EventOrganizerUser @relation(fields: [submittedBy], references: [id], onDelete: Cascade)
}

model EventOrganizerServiceProvider {
  id          String   @id @default(auto()) @map("_id") @mongodb.ObjectId
  name        String
  serviceType String
  contactInfo String
  submittedBy String   @mongodb.ObjectId
  createdAt   DateTime @default(now())

  user EventOrganizerUser @relation(fields: [submittedBy], references: [id], onDelete: Cascade)
}
